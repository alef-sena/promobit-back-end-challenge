openapi: 3.0.0
info:
  title: Promobit Backend Challenge API
  version: 1.0.0
  description: Especificação da API proposta pelo desafio da Promobit.
  contact:
    email: alefs07@gmail.com
    name: Álef Sena Araújo Franca
servers:
  - url: 'http://localhost:8081'
    description: Servidor local
paths:
  /products:
    get:
      summary: Listar todos os produtos
      responses:
        '200':
          description: Lista de produtos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    - id: 123
                      name: Notebook
                      description: '512Gb SSD, 8Gb RAM.'
                      price: 2499.99
                      category_id: 111
                      likes: 40
                      tags:
                        - id: 7
                          name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo ordenação inválida:
                  value:
                    message: 'The sort parameter must be one of the following values: name, price, likes. Add the prefix ''-'' for descending sorting.'
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: list-all-products
      description: Obter a lista de todos os produtos.
      parameters:
        - schema:
            type: string
            enum:
              - name
              - price
              - likes
              - '-name'
              - '-price'
              - '-likes'
            maxLength: 10
            pattern: '^-?[a-zA-Z]+$'
          in: query
          name: sort
          description: 'Ordenação da listagem. '
    post:
      summary: Criar um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Notebook
                  description: '512Gb SSD, 8Gb RAM.'
                  price: 2499.99
                  category_id: 111
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      responses:
        '201':
          description: Produto criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    id: 123
                    name: Notebook
                    description: '512Gb SSD, 8Gb RAM.'
                    price: 2499.99
                    category_id: 111
                    likes: 40
                    tags:
                      - id: 7
                        name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'category_id' must be an integer.
        '404':
          description: Categoria não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '409':
          description: Produto existente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Product name already exists.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: create-product
      description: Criar um produto.
  '/products/{product_id}':
    get:
      summary: Obter detalhes de um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Detalhes do produto.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    id: 123
                    name: Notebook
                    description: '512Gb SSD, 8Gb RAM.'
                    price: 2499.99
                    category_id: 111
                    likes: 40
                    tags:
                      - id: 7
                        name: Novidade
        404:
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Product not found.
        500:
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: get-product
      description: Obter um produto pelo seu id.
    put:
      summary: Atualizar um produto (substituição completa)
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Notebook
                  description: '512Gb SSD, 8Gb RAM.'
                  price: 2499.99
                  category_id: 111
                  likes: 50
        description: ''
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    id: 123
                    name: Notebook
                    description: '512Gb SSD, 8Gb RAM.'
                    price: 2499.99
                    category_id: 111
                    likes: 40
                    tags:
                      - id: 7
                        name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '404':
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Product not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: update-full-product
      description: Alterar todos os campos de um produto.
    patch:
      summary: Atualizar parcialmente um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductChangeRequestBody'
            examples:
              Exemplo:
                value:
                  name: Notebook
                  description: '512Gb SSD, 8Gb RAM.'
                  price: 2499.99
                  category_id: 111
                  likes: 50
        description: ''
      responses:
        '200':
          description: Campos do produto atualizados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    id: 123
                    name: Notebook
                    description: '512Gb SSD, 8Gb RAM.'
                    price: 2499.99
                    category_id: 111
                    likes: 40
                    tags:
                      - id: 7
                        name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: change-product
      description: Alterar alguns campos de um produto.
    delete:
      summary: Excluir um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Produto excluído com sucesso.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: delete-product
      description: Deletar um produto.
    parameters:
      - schema:
          type: integer
          example: '111'
          pattern: ^-?\d+$
        name: product_id
        in: path
        description: Identificador do produto
        required: true
  '/products/{product_id}/tags':
    get:
      summary: Listar tags de um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de tags do produto.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    - id: 7
                      name: Novidade
        '404':
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Product not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: get-product-tags
      description: Obter todas as tags vinculadas a um produto.
    parameters:
      - schema:
          type: integer
        name: product_id
        in: path
        required: true
  '/products/{product_id}/tags/{tag_id}':
    post:
      summary: Vincular uma tag a um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Tag adicionada ao produto com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    id: 123
                    name: Notebook
                    description: '512Gb SSD, 8Gb RAM.'
                    price: 2499.99
                    category_id: 111
                    likes: 40
                    tags:
                      - id: 7
                        name: Novidade
        '404':
          description: Tag não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Tag not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: link-tag-to-product
      description: Vincular um tag a um produto.
    parameters:
      - schema:
          type: integer
        name: product_id
        in: path
        required: true
      - schema:
          type: integer
        name: tag_id
        in: path
        required: true
  /categories:
    get:
      summary: Listar todas as categorias
      responses:
        '200':
          description: Lista de categorias.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
              examples:
                Exemplo:
                  value:
                    - id: 111
                      name: Eletrônicos
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: list-all-categories
      description: Obter a lista de todas as categorias.
    post:
      summary: Criar uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Eletrônicos
        description: ''
      responses:
        '201':
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              examples:
                Exemplo:
                  value:
                    id: 111
                    name: Eletrônicos
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '409':
          description: Categoria existente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category name already exists.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: create-category
      description: Criar uma categoria.
  '/categories/{category_id}':
    get:
      summary: Obter detalhes de uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da categoria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              examples:
                Exemplo:
                  value:
                    id: 111
                    name: Eletrônicos
        '404':
          description: Categoria não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: get-category
      description: Obter uma categoria pelo seu id.
    put:
      summary: Atualizar uma categoria (substituição completa)
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Eletrônicos
      responses:
        '200':
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              examples:
                Exemplo:
                  value:
                    id: 111
                    name: Eletrônicos
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '404':
          description: Categoria não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: update-full-category
      description: Alterar todos os campos de uma categoria.
    patch:
      summary: Atualizar parcialmente uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryChangeRequestBody'
            examples:
              Exemplo:
                value:
                  name: Eletrônicos
      responses:
        '200':
          description: Campos da categoria atualizados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              examples:
                Exemplo:
                  value:
                    id: 111
                    name: Eletrônicos
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '404':
          description: Categoria não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: change-category
      description: Alterar alguns campos de uma categoria.
    delete:
      summary: Excluir uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoria excluída com sucesso.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: delete-category
      description: Deletar uma categoria.
    parameters:
      - schema:
          type: integer
        name: category_id
        in: path
        required: true
  '/categories/{category_id}/products':
    get:
      summary: Listar produtos de uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de produtos da categoria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                Exemplo:
                  value:
                    - id: 123
                      name: Notebook
                      description: '512Gb SSD, 8Gb RAM.'
                      price: 2499.99
                      category_id: 111
                      likes: 40
                      tags:
                        - id: 7
                          name: Novidade
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Category not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: get-category-products
      description: Listar produtos de uma categoria.
  /tags:
    get:
      summary: Listar todas as tags
      responses:
        '200':
          description: Lista de tags.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    - id: 7
                      name: Novidade
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: list-all-tags
      description: Obter a lista de todas as tags.
    post:
      summary: Criar uma nova tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Novidade
      responses:
        '201':
          description: Tag criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    id: 7
                    name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '409':
          description: Tag existente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Tag name already exists.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: create-tag
      description: Criar uma tag.
  '/tags/{tag_id}':
    get:
      summary: Obter detalhes de uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da tag.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    id: 7
                    name: Novidade
        '404':
          description: Tag não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Tag not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: get-tag
      description: Obter uma tag pelo seu id.
    put:
      summary: Atualizar uma tag (substituição completa)
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdateRequestBody'
            examples:
              Exemplo:
                value:
                  name: Novidade
      responses:
        '200':
          description: Tag atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    id: 7
                    name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: The field 'name' must be a string.
        '404':
          description: Tag não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Tag not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: update-full-tag
      description: Alterar todos os campos de uma tag.
    patch:
      summary: Atualizar parcialmente uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagChangeRequestBody'
      responses:
        '200':
          description: Campos da tag atualizados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
              examples:
                Exemplo:
                  value:
                    id: 7
                    name: Novidade
        '400':
          description: Parâmetros inválidos da requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    message: The field 'name' must be a string.
        '404':
          description: Tag not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Tag not found.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: change-tag
      description: Alterar alguns campos de uma tag.
    delete:
      summary: Excluir uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Tag excluída com sucesso.
        '500':
          description: Erro interno ao servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Exemplo:
                  value:
                    message: Internal server error.
      operationId: delete-tag
      description: Deletar uma categoria.
components:
  schemas:
    Product:
      type: object
      description: Propriedades de um produto.
      properties:
        id:
          type: integer
          description: Identificador do produto. Gerado após a criação.
        name:
          type: string
          description: Nome do produto.
        description:
          type: string
          description: Descrição do produto.
        price:
          type: number
          format: float
          description: Preço do produto.
        category_id:
          type: integer
          description: Categoria atribuída ao produto.
        likes:
          type: integer
          description: Quantidade de curtidas.
        tags:
          type: array
          description: Tags vinculadas ao produto.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - id
        - name
        - description
        - price
        - category_id
        - likes
        - tags
      x-examples:
        Exemplo:
          - id: 123
            name: Notebook
            description: '512Gb SSD, 8Gb RAM.'
            price: 2499.99
            category_id: 111
            likes: 40
            tags:
              - id: 7
                name: Novidade
    Category:
      type: object
      description: Propriedades de uma categoria.
      properties:
        id:
          type: integer
          description: Identificador da categoria. Gerado após a criação.
        name:
          type: string
          description: Nome da categoria.
      required:
        - id
        - name
      x-examples:
        Exemplo:
          - id: 111
            name: Eletrônicos
    Tag:
      type: object
      description: Propriedades de uma tag.
      properties:
        id:
          type: integer
          description: Identificador da tag. Gerado após a criação.
        name:
          type: string
          description: Nome da tag.
      required:
        - id
        - name
      x-examples:
        Exemplo:
          - id: 7
            name: Novidade
    CategoryCreateRequestBody:
      type: object
      x-examples:
        Exemplo:
          name: Eletrônicos
      properties:
        name:
          type: string
          description: Nome da categoria.
      required:
        - name
      description: Corpo da requisição para criar categorias.
      title: ''
    TagCreateRequestBody:
      type: object
      x-examples:
        example-1:
          name: Novidade
      properties:
        name:
          type: string
          description: Nome da tag.
      required:
        - name
      description: Corpo da requisição para criar tags.
    ProductCreateRequestBody:
      type: object
      x-examples:
        example-1:
          name: Notebook
          description: '512Gb SSD, 8Gb RAM.'
          price: 2499.99
          category_id: 111
      description: Corpo da requisição para criar produtos.
      properties:
        name:
          type: string
          description: Nome do produto.
        description:
          type: string
          description: Descrição do produto
        price:
          type: number
          description: Preço do produto.
        category_id:
          type: integer
          description: Categoria do produto. Deve existir na base de dados antes da criação do produto.
      required:
        - name
        - description
        - price
        - category_id
      title: ''
    ErrorResponse:
      type: object
      x-examples:
        - message: Product already exists.
        - message: 'The sort parameter must be one of the following values: name, price, likes. Add the prefix ''-'' for descending sorting.'
        - message: Category not found.
        - message: The field 'category_id' must be an integer.
      description: Objeto de erro das respostas.
      properties:
        message:
          type: string
          description: Mensagem com a descrição do erro ocorrido.
      required:
        - message
    ProductUpdateRequestBody:
      type: object
      x-examples:
        Exemplo:
          name: teste com PUT
          description: um tanto de coisa
          price: 3500
          category_id: 2
          likes: 0
      properties:
        name:
          type: string
          description: Nome do produto.
        description:
          type: string
          description: Descrição do produto.
        price:
          type: integer
          description: Preço do produto
        category_id:
          type: integer
          description: Categoria do produto. Deve existir na base de dados antes da criação do produto.
        likes:
          type: integer
          description: Quantidade de curtidas do produto.
      required:
        - name
        - description
        - price
        - category_id
        - likes
      description: Corpo da requisição para alterar todos os campos de um produto.
    ProductChangeRequestBody:
      type: object
      x-examples:
        Exemplo:
          name: Notebook
          description: '512Gb SSD, 8Gb RAM.'
          price: 2499.99
          category_id: 111
          likes: 50
      properties:
        name:
          type: string
          description: Nome do produto.
        description:
          type: string
          description: Descrição do produto.
        price:
          type: number
          description: Preço do produto.
        category_id:
          type: integer
          description: Categoria do produto. Deve existir na base de dados antes da criação do produto.
        likes:
          type: integer
          description: Quantidade de curtidas do produto.
      description: Corpo da requisição para alterar alguns campos de um produto.
    CategoryUpdateRequestBody:
      title: CategoryUpdateRequestBody
      x-stoplight:
        id: xpj5blkh8e9qr
      type: object
      properties:
        name:
          type: string
          description: Nome da categoria.
      required:
        - name
      x-examples:
        Exemplo:
          - name: Eletrônicos
      description: Corpo da requisição para alterar todos os campos de uma categoria.
    CategoryChangeRequestBody:
      title: CategoryChangeRequestBody
      x-stoplight:
        id: zt2vp4khvr7fk
      type: object
      description: Corpo da requisição para alterar alguns campos de uma categoria.
      properties:
        name:
          type: string
          description: Nome da categoria.
      x-examples:
        Exemplo:
          - name: Eletrônicos
    TagUpdateRequestBody:
      title: TagUpdateRequestBody
      x-stoplight:
        id: 2g1nicothls3n
      type: object
      properties:
        name:
          type: string
          description: Nome da tag.
      required:
        - name
      description: Corpo da requisição para alterar todos os campos de uma tag.
      x-examples:
        Exemplo:
          - name: Novidade
    TagChangeRequestBody:
      title: TagChangeRequestBody
      x-stoplight:
        id: nxvgaljtmtcx1
      type: object
      x-examples:
        Exemplo:
          - name: Novidade
      properties:
        name:
          type: string
          description: Nome da tag.
  responses: {}
  examples: {}
  requestBodies: {}
